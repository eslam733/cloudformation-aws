Parameters:
  myVPC:
      Description: VPC used to deploy our resources below
      Type: AWS::EC2::VPC::Id
  SubnetForServer:
      Description: Subnet to be used for our Web Server
      Type: AWS::EC2::Subnet::Id
  AMItoUse:
      Description: AMI to use for our base image
      Type: String
Resources:
# IAM Role to allow EC2 Session Manager to access our server
  RoleForSSMAccess: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
# Instance Profile
  ServerInstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles: 
        - !Ref RoleForSSMAccess
  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: for ec2 80 port access
      GroupName: ec2 80 port
      VpcId: !Ref myVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: '-1'
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
  myWebServerInstance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      ImageId: !Ref AMItoUse
      IamInstanceProfile: !Ref ServerInstanceProfile
      NetworkInterfaces: 
        - AssociatePublicIpAddress: false
          DeviceIndex: "0"
          GroupSet: 
            - Ref: securityGroup
          SubnetId: 
            Ref: SubnetForServer
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd